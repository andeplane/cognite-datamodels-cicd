# Manifest file downloaded from fusion
externalId: tr-Movies
name: Movies
query: >-
  /* MAPPING_MODE_ENABLED: true */

  /* {"version":1,"sourceType":"raw","mappings":[{"from":"Movie_Name","to":"externalId","asType":"STRING"},{"from":"Movie_Name","to":"name","asType":"STRING"},{"from":"Description","to":"description","asType":"STRING"},{"from":"Run_time","to":"runTime","asType":"INT"},{"from":"Gross_USD","to":"gross","asType":"INT"},{"from":"Director","to":"director","asType":"STRUCT<`space`:STRING, `externalId`:STRING>"},{"from":"IMDB_Rating","to":"imdbRating","asType":"DOUBLE"},{"from":"Released_Year","to":"releasedYear","asType":"INT"},{"from":"","to":"watchedIt"}],"sourceLevel1":"MoviesOlgaTest","sourceLevel2":"movies"} */

  select
    cast(`Movie_Name` as STRING) as externalId,
    cast(`Movie_Name` as STRING) as name,
    cast(`Description` as STRING) as description,
    cast(`Run_time` as INT) as runTime,
    cast(`Gross_USD` as INT) as gross,
    node_reference('MoviesDMCICD', `Director`) as director,
    cast(`IMDB_Rating` as DOUBLE) as imdbRating,
    cast(`Released_Year` as INT) as releasedYear
  from
    `MoviesOlgaTest`.`movies`;
destination:
  dataModel:
    space: MoviesDMCICD
    externalId: MoviesDMCICD
    version: ${VERSION}
    destinationType: Movie
  instanceSpace: MoviesDMCICD
  type: instances
ignoreNullFields: true
shared: true
action: upsert
authentication:
  clientId: ${CLI_CLIENT_ID}
  clientSecret: ${CLI_CLIENT_SECRET}
  tokenUrl: https://login.microsoftonline.com/5409fe5e-39ad-4448-90ad-6688455011bf/oauth2/v2.0/token
  cdfProjectName: ${CLI_PROJECT}
  scopes:
   - https://api.cognitedata.com/.default